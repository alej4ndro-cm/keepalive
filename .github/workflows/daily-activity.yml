name: Daily activity
on:
  schedule:
    - cron: "25 0 * * *"   # 00:25 UTC (~6:25 PM Denver in summer, 5:25 PM in winter)
  workflow_dispatch:

permissions:
  contents: write

jobs:
  daily:
    runs-on: ubuntu-latest
    env:
      BRANCH: ${{ github.event.repository.default_branch }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.repository.default_branch }}
          persist-credentials: false

      - name: Jitter
        run: sleep $((RANDOM % 300))

      - name: Commit 1–3 realistic changes with random messages
        shell: bash
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          mkdir -p src tests docs .github/workflows build

          # Commit message pool (300+ messages from your packs)
          msgs=(
            "feat: add user profile page"
            "feat: implement password reset"
            "feat: add search functionality"
            "feat: integrate third-party API"
            "feat: add dark mode support"
            "feat: implement notifications system"
            "feat: enable file upload feature"
            "feat: add pagination to results"
            "feat: improve dashboard layout"
            "feat: add localization support"
            "fix: resolve login redirect issue"
            "fix: correct typo in config"
            "fix: handle null values in form"
            "fix: correct broken link in navbar"
            "fix: adjust mobile layout bug"
            "fix: resolve crash on logout"
            "fix: handle empty API responses"
            "fix: patch memory leak in worker"
            "fix: incorrect error message"
            "fix: align button text correctly"
            "refactor: simplify authentication logic"
            "refactor: clean up API routes"
            "refactor: extract utility functions"
            "refactor: reorganize folder structure"
            "refactor: rename variables for clarity"
            "refactor: streamline middleware"
            "refactor: split monolithic file"
            "refactor: consolidate duplicate code"
            "refactor: decouple service layer"
            "refactor: simplify DB query builder"
            "test: add unit tests for login"
            "test: expand coverage for API"
            "test: add integration tests"
            "test: mock external dependencies"
            "test: add regression tests"
            "test: increase coverage on utils"
            "test: add snapshot tests"
            "test: add security test cases"
            "test: verify error handling paths"
            "test: add load test scripts"
            "docs: update README examples"
            "docs: add API usage guide"
            "docs: expand contributing guide"
            "docs: add setup instructions"
            "docs: correct typo in docs"
            "docs: add FAQ section"
            "docs: update changelog"
            "docs: clarify environment setup"
            "docs: add architecture diagram"
            "docs: document new endpoints"
            "style: run linter on project"
            "style: fix indentation issues"
            "style: normalize quotes in code"
            "style: update CSS formatting"
            "style: fix spacing in config"
            "style: apply prettier formatting"
            "style: adjust UI theme colors"
            "style: correct alignment in UI"
            "style: rename CSS classes"
            "style: enforce style guidelines"
            "perf: optimize DB query"
            "perf: cache static assets"
            "perf: reduce image sizes"
            "perf: improve rendering speed"
            "perf: lazy load components"
            "perf: compress JSON output"
            "perf: reduce API latency"
            "perf: improve loop efficiency"
            "perf: memoize expensive calls"
            "perf: tweak cache strategy"
            "chore: update dependencies"
            "chore: bump version number"
            "chore: update CI pipeline"
            "chore: clean up temp files"
            "chore: update .gitignore"
            "chore: add env.example file"
            "chore: update build scripts"
            "chore: configure linting rules"
            "chore: update Dockerfile"
            "chore: add pre-commit hook"
            "build: update webpack config"
            "build: optimize build output"
            "build: switch to vite"
            "build: update babel config"
            "build: migrate to esbuild"
            "build: update npm scripts"
            "build: add build caching"
            "build: enable code splitting"
            "build: adjust tsconfig settings"
            "build: configure production env"
            "ci: add github actions workflow"
            "ci: fix failing test job"
            "ci: optimize CI job caching"
            "ci: add code coverage reporting"
            "ci: configure lint job"
            "ci: parallelize test jobs"
            "ci: add security scanning"
            "ci: run build on pull request"
            "ci: add release workflow"
            "ci: auto tag version bumps"
            # ... include all the rest of your 300 msgs here ...
          )

          count=$(( (RANDOM % 3) + 1 ))   # 1–3 commits per day
          for i in $(seq 1 $count); do
            msg="${msgs[$RANDOM % ${#msgs[@]}]}"
            prefix="${msg%%:*}"
            ts="$(date -u +"%Y-%m-%d %H:%M:%SZ")"

            # 30% empty commit to limit repo growth
            if [ $((RANDOM % 10)) -lt 3 ]; then
              git commit --allow-empty -m "$msg"
            else
              case "$prefix" in
                docs)
                  echo "<!-- $msg $ts -->" >> README.md
                  git add README.md
                  ;;
                test)
                  echo "# smoke $(date -u +%s)" >> tests/smoke.test
                  git add tests/smoke.test
                  ;;
                feat|fix)
                  echo "// $msg @ $ts" >> src/app.js
                  git add src/app.js
                  ;;
                refactor|perf|style)
                  echo "// $msg @ $ts" >> src/maintenance.js
                  git add src/maintenance.js
                  ;;
                chore)
                  echo "# updated $ts" >> .gitignore
                  git add .gitignore
                  ;;
                build)
                  echo "# build note $ts" >> build/README.md
                  git add build/README.md
                  ;;
                ci)
                  echo "# ci note $ts" >> .github/workflows/aux.yml
                  git add .github/workflows/aux.yml
                  ;;
                *)
                  git commit --allow-empty -m "$msg"
                  continue
                  ;;
              esac

              git diff --cached --quiet && git commit --allow-empty -m "$msg" || git commit -m "$msg"
            fi

            sleep $((RANDOM % 10 + 3))   # short delay between commits
          done

      - name: Push
        run: |
          git push "https://x-access-token:${GH_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" "HEAD:${BRANCH}"
